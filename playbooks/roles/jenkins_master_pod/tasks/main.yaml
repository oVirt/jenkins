---
- name: Validate role arguments
  assert:
    that:
      - 'openshift_project is defined'
      - 'master_name is defined'
      - 'jenkins_image is defined'

- name: OpenShift jenkins pod creation
  connection: local
  delegate_to: 127.0.0.1
  block:
    - name: Create service account
      k8s:
        state: present
        definition:
          kind: ServiceAccount
          apiVersion: v1
          metadata:
            name: "{{master_name}}"
            namespace: "{{openshift_project}}"
            annotations:
              serviceaccounts.openshift.io/oauth-redirectreference.jenkins: '
                {
                  "kind":"OAuthRedirectReference",
                  "apiVersion":"v1",
                  "reference":{
                    "kind":"Route",
                    "name":"{{master_name}}"
                  }
                }
              '

    - name: Create role binding
      k8s:
        state: present
        definition:
          kind: RoleBinding
          apiVersion: 'rbac.authorization.k8s.io/v1'
          metadata:
            name: "{{master_name}}_edit"
            namespace: "{{openshift_project}}"
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: edit
          subjects:
          - kind: ServiceAccount
            name: "{{master_name}}"

    - name: Create persistent volume claim
      k8s:
        state: present
        definition:
          apiVersion: "v1"
          kind: "PersistentVolumeClaim"
          metadata:
            name: "{{master_name}}"
            namespace: "{{openshift_project}}"
          spec:
            accessModes:
              - "ReadWriteOnce"
            resources:
              requests:
                storage: "4Gi"

    - name: Create UI service
      k8s:
        state: present
        definition:
          kind: Service
          apiVersion: v1
          metadata:
            name: "{{master_name}}-ui"
            namespace: "{{openshift_project}}"
          spec:
            ports:
              - name: ui
                port: 80
                protocol: TCP
                targetPort: 8080
            selector:
              name: "{{master_name}}"

    - name: Create JNLP service
      k8s:
        state: present
        definition:
          kind: Service
          apiVersion: v1
          metadata:
            name: "{{master_name}}-jnlp"
            namespace: "{{openshift_project}}"
          spec:
            ports:
              - name: jnlp
                port: 50000
                protocol: TCP
                targetPort: 50000
            selector:
              name: "{{master_name}}"

    - name: Create route
      k8s:
        state: present
        definition:
          apiVersion: route.openshift.io/v1
          kind: Route
          metadata:
            name: "{{master_name}}"
            namespace: "{{openshift_project}}"
          spec:
            host: ""
            port:
              targetPort: ui
            to:
              kind: Service
              name: "{{master_name}}-ui"
            tls:
              termination: edge
              insecureEdgeTerminationPolicy: Redirect

    - name: Create deployment
      k8s:
        state: present
        definition:
          kind: Deployment
          apiVersion: apps/v1
          metadata:
            name: "{{master_name}}"
            namespace: "{{openshift_project}}"
          spec:
            replicas: 1
            selector:
              matchLabels:
                name: "{{master_name}}"
            strategy:
              type: Recreate
            revisionHistoryLimit: 5
            template:
              metadata:
                labels:
                  name: "{{master_name}}"
                  image_registry: "{{ jenkins_image|regex_replace(
                      '^(([^/:]+)/)?([^/:]+)(:([^/:]+))?$', '\\2'
                    ) }}"
                  image_name: "{{ jenkins_image|regex_replace(
                      '^(([^/:]+)/)?([^/:]+)(:([^/:]+))?$', '\\3'
                    ) }}"
                  image_tag: "{{ jenkins_image|regex_replace(
                      '^(([^/:]+)/)?([^/:]+)(:([^/:]+))?$', '\\5'
                    ) }}"
                annotations:
                  alpha.image.policy.openshift.io/resolve-names: '*'
              spec:
                serviceAccountName: "{{master_name}}"
                serviceAccount: "{{master_name}}"
                containers:
                  - name: "jenkins-master"
                    image: "{{jenkins_image}}"
                    imagePullPolicy: Always
                    ports:
                      - containerPort: 8080
                        protocol: TCP
                      - containerPort: 50000
                        protocol: TCP
                    env:
                      - name: OPENSHIFT_ENABLE_OAUTH
                        value: "True"
                      - name: JENKINS_SERVICE_NAME
                        value: "{{master_name}}-ui"
                      - name: JNLP_SERVICE_NAME
                        value: "{{master_name}}-jnlp"
                      - name: CASC_JENKINS_CONFIG
                        value: "/var/lib/jenkins/casc_configs"
                      - name: OVERRIDE_PV_PLUGINS_WITH_IMAGE_PLUGINS
                        value: "True"
                      - name: JENKINS_JAVA_OVERRIDES
                        value: "
                          -Dhudson.model.Run.ArtifactList.treeCutoff=9999 \
                          -Dhudson.model.DirectoryBrowserSupport.CSP=\
                            sandbox\\ allow-scripts;\\ \
                            default-src\\ 'self'\\ https://cdnjs.cloudflare.com;\\ \
                            img-src\\ 'self';\\ \
                            style-src\\ 'self'\\ https://cdnjs.cloudflare.com;\
                        "
                    volumeMounts:
                      - name: "{{master_name}}"
                        mountPath: "/var/lib/jenkins"
                    resources:
                      limits:
                        memory: 8192Mi
                      requests:
                        memory: 8192Mi
                volumes:
                  - name: "{{master_name}}"
                    persistentVolumeClaim:
                      claimName: "{{master_name}}"
                nodeSelector:
                  type: "vm"
                  zone: "prod"

    - name: "Wait for pod to get created"
      k8s_wait:
        kind: Pod
        namespace: "{{openshift_project}}"
        label_selectors:
          - "name={{ master_name }}"
          - "image_registry={{ jenkins_image|regex_replace(
              '^(([^/:]+)/)?([^/:]+)(:([^/:]+))?$', '\\2'
            ) }}"
          - "image_name={{ jenkins_image|regex_replace(
              '^(([^/:]+)/)?([^/:]+)(:([^/:]+))?$', '\\3'
            ) }}"
          - "image_tag={{ jenkins_image|regex_replace(
              '^(([^/:]+)/)?([^/:]+)(:([^/:]+))?$', '\\5'
            ) }}"
        field_selectors:
          - "status.phase=Running"
      register: "{{ return_pod_as }}"
      tags: always
